{"version":3,"sources":["SortingVisualizer/SortingVisualizer.js","App.js","serviceWorker.js","index.js"],"names":["SortingVisualizer","props","myArrayBars","state","array","value","generateButton","arrayRef","this","setState","console","log","i","length","j","temp","style","backgroundColor","Promise","resolve","setTimeout","pos","small","k","ms","p","r","x","sleepSome","Partition","q","quickSort","start","mid","end","n1","n2","left","right","Math","floor","mergeSort","merge","randomizeArray","push","random","event","target","Container","fluid","className","Button","margin","disabled","variant","onClick","bind","onChange","handleChange","min","max","bubbleSorthelper","mergeSortHelper","quickSortHelper","insertionSort","selectionSort","map","index","key","ref","height","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dc7a1d57.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SortingVisualizer.css\";\nimport Button from \"react-bootstrap/Button\";\nimport { Container } from \"react-bootstrap\";\nimport RangeSlider from \"react-bootstrap-range-slider\";\n// const this.state.value = 100 // size of array\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myArrayBars = []; // use an array\n\n    this.state = {\n      array: [],\n      value: 30,\n      generateButton: false,\n    };\n\n    this.arrayRef = []; // refs using callback method\n  }\n\n  async bubbleSorthelper() {\n    this.setState({ generateButton: true });\n    var array = this.state.array;\n\n    console.log(this.arrayRef);\n    //const sortedArray = bubbleSort(array);\n    //this.setState({sortedArray})\n    var i, j;\n    // var arrayBars = document.getElementsByClassName('bar');\n\n    // let us use refs instead\n\n    for (i = 0; i < array.length; i++) {\n      for (j = 0; j < array.length - i - 1; j++) {\n        if (array[j + 1] < array[j]) {\n          var temp = array[j];\n          array[j] = array[j + 1];\n          array[j + 1] = temp;\n          this.arrayRef[j].style.backgroundColor = \"#2d00f7\"; // '#d63447';\n          this.arrayRef[j + 1].style.backgroundColor = \"#2d00f7\"; //'#d63447';\n          await new Promise((resolve) => setTimeout(resolve, 10));\n        }\n        this.arrayRef[j].style.backgroundColor = \"#d100d1\"; //'#3da4ab';\n        this.arrayRef[j + 1].style.backgroundColor = \"#d100d1\"; //'#3da4ab';\n      }\n      this.setState({ array });\n      this.arrayRef[array.length - i - 1].style.backgroundColor = \"#e0aaff\"; //'#bbf1c8';\n    }\n    this.setState({ array });\n    // var n = this.state.value\n\n    for (i = 0; i < this.state.array.length; i++) {\n      await new Promise((resolve) => setTimeout(resolve, 0.5));\n      if (this.arrayRef[i]) {\n        this.arrayRef[i].style.backgroundColor = \"#3da4ab\";\n      } else {\n        break;\n      }\n    }\n    this.setState({ generateButton: false });\n  }\n  async selectionSort() {\n    this.setState({ generateButton: true });\n    var array = this.state.array;\n    // var arrayBars = document.getElementsByClassName('bar')\n\n    var small,\n      pos = 0,\n      i,\n      k,\n      temp;\n\n    for (i = 0; i < this.state.array.length; i++) {\n      await new Promise((resolve) => setTimeout(resolve, 5));\n      this.arrayRef[i].style.backgroundColor = \"#3a86ff\";\n      small = array[i];\n      pos = i;\n      for (k = i + 1; k < this.state.array.length; k++) {\n        await new Promise((resolve) => setTimeout(resolve, 5));\n        this.arrayRef[k].style.backgroundColor = \"#ffbe0b\";\n        if (array[k] < small) {\n          small = array[k];\n          pos = k;\n        }\n        await new Promise((resolve) => setTimeout(resolve, 5));\n        this.arrayRef[k].style.backgroundColor = \"#3a86ff\";\n      }\n\n      temp = array[i];\n      array[i] = small;\n      array[pos] = temp;\n      this.setState({ array });\n\n      await new Promise((resolve) => setTimeout(resolve, 7));\n      this.arrayRef[i].style.backgroundColor = \"#ff006e\";\n    }\n    this.setState({ array });\n    for (i = 0; i < this.state.array.length; i++) {\n      await new Promise((resolve) => setTimeout(resolve, 0.5));\n      this.arrayRef[i].style.backgroundColor = \"#3da4ab\";\n    }\n    this.setState({ generateButton: false });\n  }\n\n  sleepSome(ms) {\n    return new Promise((resolve) => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  async Partition(array, p, r) {\n    var x = array[r];\n    var i = p - 1;\n\n    var j, temp;\n\n    for (j = p; j < r; j++) {\n      temp = 0;\n      if (array[j] <= x) {\n        this.arrayRef[j].style.backgroundColor = \"#FDE74C\";\n        await this.sleepSome(100);\n        this.arrayRef[j].style.backgroundColor = \"#6FBF4A\"; //\"#5BC0EB\";\n\n        i = i + 1;\n        temp = array[j];\n        array[j] = array[i];\n        array[i] = temp;\n      }\n      await this.sleepSome(12);\n      this.setState({ array });\n    }\n    temp = 0;\n    temp = array[r];\n    array[r] = array[i + 1];\n    array[i + 1] = temp;\n\n    await this.sleepSome(100);\n    this.arrayRef[i + 1].style.backgroundColor = \"#E55934\";\n\n    await this.sleepSome(100);\n    this.setState({ array });\n\n    return i + 1;\n  }\n\n  async quickSort(array, p, r) {\n    if (p < r) {\n      var q = await this.Partition(array, p, r);\n      console.log(p, \" \", r);\n      await this.quickSort(array, p, q - 1);\n      await this.quickSort(array, q + 1, r);\n    }\n  }\n\n  async quickSortHelper() {\n    this.setState({ generateButton: true });\n\n    console.log(this.state.generateButton);\n\n    var array = this.state.array;\n\n    // instead of using the state value, use the state array's length\n\n    await this.quickSort(array, 0, array.length - 1);\n\n    this.setState({ array });\n    this.setState({ generateButton: false });\n\n    var i;\n    for (i = 0; i < this.arrayRef.length; i++) {\n      await this.sleepSome(10);\n      if (this.arrayRef[i]) {\n        this.arrayRef[i].style.backgroundColor = \"#3da4ab\";\n      } else {\n        console.log(i);\n        console.log(this.arrayRef[i]);\n        console.log(this.arrayRef.length);\n      }\n    }\n  }\n  async merge(array, start, mid, end) {\n    var n1 = mid - start + 1;\n    var n2 = end - mid;\n\n    var left = [];\n    var right = [];\n\n    var i,\n      j,\n      k = 0;\n\n    for (i = 0; i < n1; i++) {\n      left[i] = array[start + i];\n    }\n    for (j = 0; j < n2; j++) {\n      right[j] = array[mid + 1 + j];\n    }\n\n    var i = 0,\n      j = 0,\n      k = start;\n\n    while (i < n1 && j < n2) {\n      if (left[i] <= right[j]) {\n        this.arrayRef[k].style.backgroundColor = \"#fe938c\";\n        await this.sleepSome(70);\n        this.arrayRef[k].style.backgroundColor = \"#3da4ab\";\n        array[k] = left[i];\n        i += 1;\n        k += 1;\n        this.setState({ array });\n        await this.sleepSome(15);\n      } else {\n        this.arrayRef[k].style.backgroundColor = \"#fe938c\";\n        await this.sleepSome(70);\n        this.arrayRef[k].style.backgroundColor = \"#3da4ab\";\n        array[k] = right[j];\n        j += 1;\n        k += 1;\n        this.setState({ array });\n        await this.sleepSome(15);\n      }\n    }\n\n    while (i < n1) {\n      this.arrayRef[k].style.backgroundColor = \"#fe938c\";\n      await this.sleepSome(70);\n      this.arrayRef[k].style.backgroundColor = \"#3da4ab\";\n\n      array[k] = left[i];\n      i += 1;\n      k += 1;\n      this.setState({ array });\n      await this.sleepSome(15);\n    }\n    while (j < n2) {\n      this.arrayRef[k].style.backgroundColor = \"#fe938c\";\n      await this.sleepSome(70);\n      this.arrayRef[k].style.backgroundColor = \"#3da4ab\";\n\n      array[k] = right[j];\n      j += 1;\n      k += 1;\n      this.setState({ array });\n      await this.sleepSome(15);\n    }\n\n    this.setState({ array });\n    await this.sleepSome(75);\n  }\n\n  async mergeSort(array, start, end) {\n    if (start < end) {\n      var mid = Math.floor(start + (end - start) / 2);\n      this.arrayRef[mid].style.backgroundColor = \"#e01a4f\";\n      await this.sleepSome(70);\n\n      await this.mergeSort(array, start, mid);\n      await this.mergeSort(array, mid + 1, end);\n      await this.merge(array, start, mid, end);\n    }\n  }\n\n  async mergeSortHelper() {\n    var array = this.state.array;\n    this.setState({ generateButton: true });\n    await this.mergeSort(array, 0, array.length - 1);\n    this.setState({ generateButton: false });\n\n    this.setState({ array });\n  }\n\n  async insertionSort() {\n    this.setState({ generateButton: true }); // disable the generateArrayButton\n    var array = this.state.array; // current array to be sorted\n\n    var i, j;\n    for (i = 0; i < this.state.array.length; i++) {\n      var temp = array[i];\n      await new Promise((resolve) => setTimeout(resolve, 5));\n      this.arrayRef[i].style.backgroundColor = \"#ff1654\";\n\n      j = i - 1;\n      while (j >= 0 && array[j] > temp) {\n        await new Promise((resolve) => setTimeout(resolve, 5));\n        this.arrayRef[j].style.backgroundColor = \"#ff1654\";\n        array[j + 1] = array[j];\n        await new Promise((resolve) => setTimeout(resolve, 1));\n        this.arrayRef[j].style.backgroundColor = \"#7678ed\"; //'#ffa6c1';\n        j = j - 1;\n      }\n      this.arrayRef[i].style.backgroundColor = \"#7678ed\"; //'#ffa6c1';\n\n      array[j + 1] = temp;\n      this.setState({ array });\n    }\n    for (i = 0; i < this.state.array.length; i++) {\n      await new Promise((resolve) => setTimeout(resolve, 0.5));\n      if (this.arrayRef[i]) {\n        this.arrayRef[i].style.backgroundColor = \"#3da4ab\";\n      }\n    }\n    this.setState({ generateButton: false });\n  }\n\n  componentDidMount() {\n    this.randomizeArray();\n  }\n\n  randomizeArray() {\n    const array = [];\n    for (let i = 0; i < this.state.value; i++) {\n      array.push(Math.floor(Math.random() * 550 + 5));\n    }\n    this.setState({ array });\n  }\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n    this.randomizeArray();\n  }\n  render() {\n    const { array } = this.state;\n    return (\n      <Container fluid style={{ backgroundColor: \"black\" }}>\n        <div className=\"header\">\n          <h1>Sorting Visualizer</h1>\n        </div>\n        <div className=\"range-slider\">\n          <Button\n            style={{ margin: \"10px\" }}\n            disabled={this.state.generateButton}\n            variant=\"outline-primary\"\n            onClick={this.randomizeArray.bind(this)}\n          >\n            Generate New Array\n          </Button>{\" \"}\n          <RangeSlider\n            // onChange={changeEvent => this.setState({ value: changeEvent.target.value})}\n            value={this.state.value}\n            disabled={this.state.generateButton}\n            onChange={this.handleChange.bind(this)}\n            variant=\"info\"\n            min=\"30\"\n            max=\"100\"\n          />\n          <Button\n            style={{ margin: \"10px\" }}\n            variant=\"outline-primary\"\n            onClick={this.bubbleSorthelper.bind(this)}\n          >\n            Bubble Sort\n          </Button>{\" \"}\n          <Button\n            style={{ margin: \"10px\" }}\n            variant=\"outline-primary\"\n            onClick={this.mergeSortHelper.bind(this)}\n          >\n            Merge Sort\n          </Button>{\" \"}\n          <Button\n            style={{ margin: \"10px\" }}\n            variant=\"outline-primary\"\n            onClick={this.quickSortHelper.bind(this)}\n          >\n            Quick Sort\n          </Button>{\" \"}\n          <Button\n            style={{ margin: \"10px\" }}\n            variant=\"outline-primary\"\n            onClick={this.insertionSort.bind(this)}\n          >\n            Insertion Sort\n          </Button>{\" \"}\n          <Button\n            style={{ margin: \"10px\" }}\n            variant=\"outline-primary\"\n            onClick={this.selectionSort.bind(this)}\n          >\n            Selection Sort\n          </Button>{\" \"}\n        </div>\n        <div className=\"array-bars\">\n          {array.map((value, index) => (\n            <div>\n              <div\n                className=\"bar\"\n                key={index}\n                ref={(value) => (this.arrayRef[index] = value)}\n                style={{ height: `${value}px` }}\n              ></div>\n            </div>\n          ))}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default SortingVisualizer;\n","import React from 'react';\nimport './App.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer.js';\nfunction App() {\n  return (\n    <SortingVisualizer></SortingVisualizer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}